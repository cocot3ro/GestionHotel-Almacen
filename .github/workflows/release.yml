name: Build and Release

on:
  workflow_dispatch:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  build-and-release:
    if: github.event_name == 'workflow_dispatch' || github.event.pull_request.merged == true
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Decode keystore
        shell: bash
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > keystore.jks

      - name: Extract version from Gradle file
        id: version
        shell: bash
        run: |
          version=$(grep 'val version: String' composeApp/build.gradle.kts | sed -E 's/.*"(.+)".*/\1/')
          echo "VERSION=$version" >> $GITHUB_ENV
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Build APK signed
        shell: bash
        run: |
          ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=keystore.jks \
            -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
            -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
            -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }}

      - name: Build MSI
        shell: bash
        run: ./gradlew packageMsi

      - name: Rename generated artifacts
        shell: bash
        run: |
          mv composeApp/build/outputs/apk/release/composeApp-release.apk gh-almacen-v${VERSION}.apk
          mv composeApp/build/compose/binaries/main/msi/com.cocot3ro.gh.almacen-${VERSION}.msi gh-almacen-v${VERSION}.msi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: ${{ steps.version.outputs.version }}
          body: ${{ github.event.pull_request.body }}
          files: |
            gh-almacen-v${{ steps.version.outputs.version }}.apk
            gh-almacen-v${{ steps.version.outputs.version }}.msi

      - name: Generate versions.json
        shell: bash
        run: |
          echo "{
            \"desktop\": {
              \"version\": \"${{ steps.version.outputs.version }}\",
              \"url\": \"https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.version }}/gh-almacen-v${{ steps.version.outputs.version }}.msi\"
            },
            \"android\": {
              \"version\": \"${{ steps.version.outputs.version }}\",
              \"url\": \"https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.version }}/gh-almacen-v${{ steps.version.outputs.version }}.apk\"
            }
          }" > versions.json

      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          token: ${{ secrets.GITHUB_TOKEN }}
          path: gh-pages

      - name: Copy versions.json to gh-pages
        shell: bash
        run: cp versions.json gh-pages/versions.json

      - name: Commit and push versions.json
        shell: bash
        working-directory: gh-pages
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add versions.json
          git commit -m "chore: update versions.json to v${{ steps.version.outputs.version }}" || echo "No changes to commit"
          git push origin gh-pages
